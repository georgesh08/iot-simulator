version: "3.9"
services:
  simulator:
    container_name: simulator
    build:
      context: .
      dockerfile: Dockerfile.simulator
    environment:
      GRPC_SERVER_PORT: 16868
      CONTROLLER_PORT: 18686
      CONTROLLER_HOST: controller
      ELK_HOST: logstash
      ELK_PORT: 5044
    command: ["5", "2"]
    stdin_open: true
    ports:
      - "14622:14622"
    networks:
      - app_network
  
  controller:
    container_name: controller
    build:
      context: .
      dockerfile: Dockerfile.controller
    environment:
      MONGODB_HOST: mongodb
      MONGODB_USER: admin
      MONGODB_PASSWORD: pass
      GRPC_SERVER_PORT: 18686
      RABBITMQ_HOSTNAME: rabbitmq
      ELK_HOST: logstash
      ELK_PORT: 5044
    stdin_open: true
    ports:
      - "14620:14620"
    networks:
      - app_network
  
  ruleengine:
    container_name: ruleengine
    build:
      context: . 
      dockerfile: Dockerfile.engine
    environment:
        RABBITMQ_HOSTNAME: rabbitmq
        RABBITMQ_HOSTPORT: 5672
        ELK_HOST: logstash
        ELK_PORT: 5044
    stdin_open: true
    ports:
      - "14624:14624"
    networks:
      - app_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # Default RabbitMQ port
      - "15672:15672" # Management console port
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app_network
  
  mongodb:
    container_name: mongodb
    image: mongo:6-jammy
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: pass
    ports:
      - 27017:27017
    volumes:
      - dbdata6:/data/db
    networks:
      - app_network

  elasticsearch:
    image: elasticsearch:8.16.6
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms750m -Xmx750m
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - app_network
  
  integration-tests:
    container_name: integration-tests
    build:
      context: .
      dockerfile: Dockerfile.integration
    depends_on:
      simulator:
        condition: service_started
      controller:
        condition: service_started
    environment:
      SIMULATOR_HOST: simulator
      SIMULATOR_PORT: 16868
      CONTROLLER_HOST: controller
      CONTROLLER_PORT: 18686
    networks:
      - app_network

  logstash:
    image: logstash:8.16.6
    container_name: log
    ports:
      - "5044:5044"  
    environment:
      discovery.seed_hosts: logstash
      LS_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - ./elk/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    networks:
      - app_network

  kibana:
    image: kibana:8.16.6
    container_name: kib
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - app_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin       
      - GF_SECURITY_ADMIN_PASSWORD=avpless1   
    volumes:
      - grafana-data:/var/lib/grafana       
    networks:
      - app_network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - app_network

volumes:
  esdata:
    driver: local
  dbdata6:
  grafana-data:

networks:
  app_network:
    driver: bridge